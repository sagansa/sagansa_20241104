plugins {
    id "com.android.application"
    id "kotlin-android"
    // Remove the version number and just use the plugin ID
    id "dev.flutter.flutter-gradle-plugin"
    id "org.jetbrains.kotlin.android" version "1.9.22" apply false
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "4"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0.4"
}

android {
    namespace = "com.sei.sagansa_app"
    compileSdkVersion 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId = "com.example.sagansa_20241104"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    lintOptions {
        disable 'MockLocation'
        // atau gunakan baseline
        baseline file("lint-baseline.xml")
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // Tambahkan dependency AndroidX
    implementation 'androidx.core:core:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.2")
}

flutter {
    source = "../.."
}
